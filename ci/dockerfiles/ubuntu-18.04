###############################################################################
# Dockerfile to build SCRIMMAGE
###############################################################################
FROM ubuntu:18.04

MAINTAINER Eric Squires

WORKDIR /root

RUN apt-get update && apt-get upgrade -y

# optional for gui: apt-get install -y libvtk6-dev
RUN DEBIAN_FRONTEND=noninteractive apt-get install -y \
    cmake \
    git \
    libgrpc++-dev \
    libeigen3-dev \
    librapidxml-dev \
    libboost-thread-dev \
    libboost-date-time-dev \
    libboost-graph-dev \
    libboost-iostreams-dev \
    libboost-program-options-dev \
    libboost-regex-dev \
    libboost-filesystem-dev \
    libboost-system-dev \
    libprotobuf-dev \
    protobuf-compiler \
    libgeographic-dev \
    protobuf-compiler-grpc \
    libpython3.7-dev \
    python3-pip

COPY ./ /root/scrimmage/scrimmage
WORKDIR /root/scrimmage/scrimmage

WORKDIR /root/scrimmage/scrimmage/3rd-party
RUN rm -rf build
RUN mkdir -p build
WORKDIR build
RUN cmake ..
RUN make jsbsim pybind11 -j $(($(nproc --all) - 1))

WORKDIR /root/scrimmage/scrimmage
RUN rm -rf build
RUN mkdir -p build
WORKDIR build
RUN cmake .. -DBUILD_TESTS=ON -DPYTHON_MIN_VERSION=3 -DCMAKE_PREFIX_PATH=~/.local

RUN /bin/bash -c "source ~/.scrimmage/setup.bash && make -j $(($(nproc --all) - 1))"
RUN /bin/bash -c "source ~/.scrimmage/setup.bash && export CTEST_OUTPUT_ON_FAILURE=1 && make test"

WORKDIR /root/scrimmage/scrimmage/python
RUN pip3 install -e .
